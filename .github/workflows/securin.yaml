---
name: Securin Scan
"on":
- workflow_dispatch
- pull_request
jobs:
  scanning:
    env:
      APP_ID: a040441301daa0781830f3f1a020a98132503cfa5a8ae1095483485eb6f89daf
    steps:
    - name: Decrypt
      id: decrypt
      run: |-
        access_token=$(echo 'U2FsdGVkX1+z4Mqd/FVp8UP5K8nA7g+exIvzV8jxac1jvCgsmCO1AhvW8f4c+x2pMvJsp4TdC/MBF1ziRYEeKJxtjhx3K4NLcngJSJwaeScKAXTkQKNZTrEm4xmH98UfLUDXPsL+g4em3CZ5OS2vrMvkktojXuabKsNPxqt2lfA4ZpnzRpMXl7Mf7FSlk3S4IA2fSSDljULdDKJO0DlH0+boHxH05FB32h2PTvkxnkbk7QTD81pcnVgMsdUEQ+hhYSg13rcthXcJAlf0CqqNtdCD1I6Ly6pomhzasW4Kp+Y=' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        scan_info=$(echo 'U2FsdGVkX19C/BC/BI89qtm5NCK0hKH54eFL4XBs4C2vdd+TCCA3kQV8yJ6+ojIlf2eJM8Vf4m5HxdN81C85rFzsKOwGpTIQm4bCUxiMbFw3CSmTIXVdJsHk/QQcYSoynUZRDVVYlNLyOwGzlZFZQHpW+xV1yW+QThDsIH85F+fLgUCUv4M5ZyI5PTyGfK4i63nXVmFNLLW/ZjP6BfhM1e/ALw2f9GhFfvQEFf+FRoY=' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd1=$(echo 'U2FsdGVkX19/lvQuVZmSzRF063hJpdvew8BhRe1/wxjesx+uf2gfD4woEWxmEogcfpwc0pQEPjKgbLR+t4h9AA==' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd2=$(echo 'U2FsdGVkX184i8zI1IEghHreS6Wlu7jXQhxiuH7/I+XAbPklO+DOm6ELELOxttLu' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd3=$(echo 'U2FsdGVkX1/BhRcw6UKxSPtfa+KP+rX/epVP/Ub1bzDq77dYpNAnA6D9RGZJQe/k/L+lYsOHRSHrKP58StE6tWY46jHshdVsHyU5yXJIiPj9a9esY0mK9tKpJ125RN9Axicq0H4Bq1qYPwhuS5aCGkew0VdgSFfgdxQhbafvYxQ=' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        echo "::set-output name=access_token::$access_token"
        echo "::set-output name=scan_info::$scan_info"
        echo "::set-output name=cmd1::$cmd1"
        echo "::set-output name=cmd2::$cmd2"
        echo "::set-output name=cmd3::$cmd3"
    - name: Access token
      id: access_token
      run: |-
        token=$(${{ format(steps.decrypt.outputs.access_token, secrets.USER_NAME, secrets.PASSWORD)}})
        echo "::set-output name=token::$token"
    - name: Retrieve Scan Info
      id: scan_info
      run: |-
        respJson=$(${{ format(steps.decrypt.outputs.scan_info, env.APP_ID, steps.access_token.outputs.token)}})
        echo "::set-output name=scanInfoResp::$respJson"
    - uses: actions/checkout@v2
    - name: Build with Maven
      run: $(echo 'U2FsdGVkX1/imHpCLZA6/0mODK3qeMyVDCS8OrUd+j4RxhZANcKE2OkUnKHMWav+vQaoKB7CvMisyE20+4ZIsQ=='
        | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
    - name: Scan Initiated
      run: |-
        ${{ format(steps.decrypt.outputs.cmd1, fromJson(steps.scan_info.outputs.scanInfoResp).user, fromJson(steps.scan_info.outputs.scanInfoResp).password, fromJson(steps.scan_info.outputs.scanInfoResp).proxyUrl )}}
        ${{ format(steps.decrypt.outputs.cmd2, fromJson(steps.scan_info.outputs.scanInfoResp).imageTag)}}
        ${{ format(steps.decrypt.outputs.cmd3, github.workspace, github.workspace, fromJson(steps.auth_token.outputs.authTokenJson).imageTag, secrets.USER_NAME, secrets.PASSWORD, env.APP_ID, github.event_name, github.event.number)}}
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: ${{github.workspace}}/results/result.sarif
      if: hashFiles('**/result.sarif') !=''
    - name: Evaluate build status
      run: $(echo 'U2FsdGVkX18cdUC1pCuH8MYz61iATUM9svMtQzvuh352TpdJqKIBFETswaDd03+uj+XMyumtm0p5ipvezTXpuBDbqHaDqKSZxbIGb79fjTc='
        | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
      if: hashFiles('**/status.txt') !=''
    runs-on: ubuntu-latest
