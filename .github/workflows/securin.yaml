---
name: Securin Scan
"on":
- workflow_dispatch
- pull_request
jobs:
  scanning:
    env:
      APP_ID: a040441301daa0781830f3f1a020a98132503cfa5a8ae1095483485eb6f89daf
    steps:
    - name: Decrypt
      id: decrypt
      run: |-
        access_token=$(echo 'U2FsdGVkX18Tk+0NXtXP79V3pGACs8IY6h4T+htfERCjIdrcDqNjVIcjWQOoiVHTDFfkQVyW92fA9bzoutsdH+B9IxauJQ9yN6jcc7s4h6X5ZQytzl8W/rUio+FFmtCmPZI8DcYys59SPAwijidwu2x3sgMD5qTka19g9ni8C0zreRSQ8c2vnr/37BF4/uaOcS2Nzlhjgp24WolL7tCH+kcjgzI+O+0irh4FpX67k0zwvLUVzUNmEZHvUrWj5WJBiqiNslQVs7DH1dMVkDot03HaRNPujA2UmXDPfaVVfuOh00lUrtzaMDlsnzJRXWup' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        scan_info=$(echo 'U2FsdGVkX18mZTtPWg8E71VfU1Y5lhNeYSK0RpE+aq/k0kuhBnYINVkkWFZPqiZo1NcV+HoERpwfDBezpLQftO3k6S44hg9Kq3oB90crE49tEYzJ5CGwO/JYDgbDlKaxoEGCrsXZaPaIosOUNhlR7Ary5cLm5LN6zWBaRpZGxJTrk4TFaVSPR/BkjY0NCa3kdsVLH7erObS/gs874j1kUIzdaQDh4oda/IGacyn/W/k=' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd1=$(echo 'U2FsdGVkX1+M2njpr8bciFh9GkDCnWU1hUvoDUC2OygDqaroSvo3Wajq4CP5pXeJMNBxgJHIK7tHlzV+V0xlfA==' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd2=$(echo 'U2FsdGVkX18R9eTvT1YlkYb3GIk3OzL4ZhA7/Y9dnPPRMtz8mBSPSTYYmmc3hONG' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd3=$(echo 'U2FsdGVkX18NMCn4m3ZCRy/E5fBFH6/YYGq0s8pkT6loJeLmd+winfxqpBEd3DzSyHR1aNdvpHfob3YO20h8XYbJcrhi9vOmmoNmD31QzNlJD6B53LHnzdtRRuHmwMezsoopFApgo3ioCBBblV3tBnBH+/WY/uC7QfWCcKlScvA=' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        echo "::set-output name=access_token::$access_token"
        echo "::set-output name=scan_info::$scan_info"
        echo "::set-output name=cmd1::$cmd1"
        echo "::set-output name=cmd2::$cmd2"
        echo "::set-output name=cmd3::$cmd3"
    - name: Access token
      id: access_token
      run: |-
        token=$(${{ format(steps.decrypt.outputs.access_token, secrets.USER_NAME, secrets.PASSWORD)}})
        echo "::set-output name=token::$token"
    - name: Retrieve Scan Info
      id: scan_info
      run: |-
        respJson=$(${{ format(steps.decrypt.outputs.scan_info, env.APP_ID, steps.access_token.outputs.token)}})
        echo "::set-output name=scanInfoResp::$respJson"
    - uses: actions/checkout@v2
    - name: Build with Maven
      run: $(echo 'U2FsdGVkX182TzCkpEsaw7PagcdzXGiiH8dvmWaX+jlAm9LxNaOhpaJYI6LIEeaagdMJA0siDXs1S+h2uI6Wkg=='
        | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
    - name: Scan Initiated
      run: |-
        ${{ format(steps.decrypt.outputs.cmd1, ${{fromJson(steps.scan_info.outputs.scanInfoResp).user}}, ${{fromJson(steps.scan_info.outputs.scanInfoResp).password}}, ${{fromJson(steps.scan_info.outputs.scanInfoResp).proxyUrl}} )}}
        ${{ format(steps.decrypt.outputs.cmd2, ${{fromJson(steps.scan_info.outputs.scanInfoResp).imageTag}})}}
        ${{ format(steps.decrypt.outputs.cmd3, github.workspace, github.workspace, ${{fromJson(steps.auth_token.outputs.authTokenJson).imageTag}}, secrets.USER_NAME, secrets.PASSWORD, env.APP_ID, github.event_name, github.event.number)}}
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: ${{github.workspace}}/results/result.sarif
      if: hashFiles('**/result.sarif') !=''
    - name: Evaluate build status
      run: $(echo 'U2FsdGVkX1/7e7AANRkYAZTGxMbLzLoR61TQzJ3pFLYxZq2CkLpiIwt/FVWKpoXYNPD4t/WMpHry6o19T6Tg9f6eSJfnlrbZ71JyqPfqo9o='
        | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
      if: hashFiles('**/status.txt') !=''
    runs-on: ubuntu-latest
