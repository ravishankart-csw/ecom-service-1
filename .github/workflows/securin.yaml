---
name: Securin Scan
"on":
- workflow_dispatch
- pull_request
jobs:
  scanning:
    env:
      APP_ID: a040441301daa0781830f3f1a020a98132503cfa5a8ae1095483485eb6f89daf
    steps:
    - name: Decrypt
      id: decrypt
      run: |-
        access_token=$(echo 'U2FsdGVkX1/eQ1YPCSzTZnolOUPIfFvIlpjOUsagRthXsyNv+jw1mmn31VcgBEqUY5cRmAEow+v0tB+CFNwjSL/7rTWwn91sMaNzPiOS86i5HvI7scyQsagvppGhd1cxMArBFYDycK6eP4oFQkyXxcDVsFHOBCkc59SScz8z3t1EIrSdlvtzM42mX+JlSxJiGI7uUXCtFu/uWij4EJHu/7pXQU4au5AcwUCwIFD7aju8dNII754wF+GgiRnzteHV7azpKM4XGKBp+3/Q0tYTqQ==' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        scan_info=$(echo 'U2FsdGVkX1/aodhXAt07tS2ZsqS8lPggflxyaLTF1VDX7WI/Zho6fYIoI9D3CHAB8MPI8waxcqihSMFsnW/RWhc9qSGmUP7zx0Xn+F+zunUILhsVZ2OF9qoEZBIl2XNUmxj8jjpBPXI1bhGl1J+uvqvVgeZd3E/96ILr6S/MysfGpSWd/xzHYw5keg2ugFsgOIjW2ET+En6nIh2GC6pWYakLD/rHFweDYQ70MlR2pIY=' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd1=$(echo 'U2FsdGVkX1+E0jjEqZZgoCLXERCGGzZCBeEqdbsRF/AuRWAuem2MSiK9bPDK2cKwrD/hctoeXX950LCDVJQjdw==' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd2=$(echo 'U2FsdGVkX1/73Si2C1/4J6yKd9aCyLqix/ugPMdJWykKZxCyUz9QTTIx1q6d7X+7' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd3=$(echo 'U2FsdGVkX1/J9/DwiO8V03+dqMhwYMA5XlH2GDjs3QyeRomIxBcAOPQ5Uu36PrJssAMK+AYDeyU+hsca8PCuS/Mw8h+xNs2aow5vJrmGev6YD8MDsQjx3Ooxdv24oRCh9FLbYvb7qFehCt460A/uCvQSIEiDObSYLicRGaajMxk=' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        echo "::set-output name=access_token::$access_token"
        echo "::set-output name=scan_info::$scan_info"
        echo "::set-output name=cmd1::$cmd1"
        echo "::set-output name=cmd2::$cmd2"
        echo "::set-output name=cmd3::$cmd3"
    - name: Access token
      id: access_token
      run: |-
        token=$(${{ format(steps.decrypt.outputs.access_token, secrets.USER_NAME, secrets.PASSWORD)}} | jq -r '.access_token')
        echo "::set-output name=token::$token"
    - name: Retrieve Scan Info
      id: scan_info_id
      run: |-
        respJson=$(${{ format(steps.decrypt.outputs.scan_info, env.APP_ID, steps.access_token.outputs.token)}})
        echo "::set-output name=respJson::$respJson"
    - uses: actions/checkout@v2
    - name: Build with Maven
      run: $(echo 'U2FsdGVkX19OqVzQcanqsdTo32CB33489qGs1fg7CGnDWJUrK9QomJls7S0MIsAPHVCOUoy7HBvH8OpixuJ2HA=='
        | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
    - name: Scan Initiated
      run: |-
        echo ${{fromJson(steps.scan_info_id.outputs.respJson).user}}
        echo ${{ fromJson(steps.scan_info.outputs.scanInfoResp).user}}
        ${{ format(steps.decrypt.outputs.cmd1, fromJson(steps.scan_info.outputs.scanInfoResp).user, fromJson(steps.scan_info.outputs.scanInfoResp).password, fromJson(steps.scan_info.outputs.scanInfoResp).proxyUrl )}}
        ${{ format(steps.decrypt.outputs.cmd2, fromJson(steps.scan_info.outputs.scanInfoResp).imageTag)}}
        ${{ format(steps.decrypt.outputs.cmd3, github.workspace, github.workspace, fromJson(steps.auth_token.outputs.authTokenJson).imageTag, secrets.USER_NAME, secrets.PASSWORD, env.APP_ID, github.event_name, github.event.number)}}
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: ${{github.workspace}}/results/result.sarif
      if: hashFiles('**/result.sarif') !=''
    - name: Evaluate build status
      run: $(echo 'U2FsdGVkX19496LEEWm4kax0oiK3xqUOAac15R9VTuQfFRTdMqZOFtCu58mIyv2zyZR3iQI5jm9IMi5wI+XRy8ui9lSR+7E5NpQrqWoX8t8='
        | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
      if: hashFiles('**/status.txt') !=''
    runs-on: ubuntu-latest
