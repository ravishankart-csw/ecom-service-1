---
name: Securin Scan
"on":
- workflow_dispatch
- pull_request
jobs:
  scanning:
    env:
      APP_ID: a040441301daa0781830f3f1a020a98132503cfa5a8ae1095483485eb6f89daf
    steps:
    - name: Decrypt
      id: decrypt
      run: |-
        access_token=$(echo 'U2FsdGVkX19IB0/6SxJ2t0jI8J/rl79g6lWugMVd2fnD6lzGsIwOoC7NXUkIrcC1W7rQbCj6A/p1hXSfdKaaqddz6u3t2o3QuqGDMleJHa0OHTnEAN1jPHLOeEXcW212mbGq76w3MDRrBGAt4VUXjhu+dhD9ZdT4mMXB5cABU7a8mQDnTw9/wIMsGXPxHMtDwWCGa0IKvCwI57wGvqNfWz9H+VyCFzQEU7dy08OxIjfNqExXiNUNIVUGw8rN1oARpY+mOZibTgsQRRJiit4HuvnGoz7NayXm53xomZT1y2w=' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        scan_info=$(echo 'U2FsdGVkX1/NDDrplwqXEbFhr5R9AKRWFVoXBI9lWD9uNhltrWe4cqLQEisZLCiT7DOT3638blRNkglrB7kcqjzuDW24bPouG39A8lpVtNP3qUB9gKf/r/wJKA7IwXJwVXBEm1IMEL6fVRBksJ9qoWgJi6iD+ylIicNmImP92ohRp8aZK+4Bqq+MYRnPvrowhYj3wxOX53ye22tPNlOU+deCAXgPLSvbRjNoH5KLzxE=' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd1=$(echo 'U2FsdGVkX18+svbzjvXwXRwvOjo6s8nSMUSdRt+BkAD7Idaxbd5PyKxlw7x5jQemIRgIe3tXiROOU6Pa45F60Q==' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd2=$(echo 'U2FsdGVkX1+O135QM9DMCbi38KBQhD9VvP/2MY4BmW6ZqBFCD1+Inw8buO0xMXEw' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd3=$(echo 'U2FsdGVkX1+VYzZjZtxPuSYi+V3Ip6GXBK+umN9PMHPBpT5CACXzlhqhShdga4N9zRiiY91rA4H+bhicKqTLS1f258a1F9jPiMIy6Ebq/IoGJqmBvtbe2aP1wBOWhIYZTqwDVJU7/YCNY8UL/kVU6yTKEGZLB4RrxkXgHQy4e/s=' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        echo "::set-output name=access_token::$access_token"
        echo "::set-output name=scan_info::$scan_info"
        echo "::set-output name=cmd1::$cmd1"
        echo "::set-output name=cmd2::$cmd2"
        echo "::set-output name=cmd3::$cmd3"
    - name: Access token
      id: access_token
      run: |-
        token=$(${{ format(steps.decrypt.outputs.access_token, secrets.USER_NAME, secrets.PASSWORD)}})
        echo "::set-output name=token::$token"
    - name: Retrieve Scan Info
      id: scan_info
      run: |-
        respJson=$(${{ format(steps.decrypt.outputs.scan_info, env.APP_ID, steps.access_token.outputs.token)}})
        echo "::set-output name=scanInfoResp::$respJson"
    - uses: actions/checkout@v2
    - name: Build with Maven
      run: $(echo 'U2FsdGVkX19+f1/BVzH0KcjgVNjTOZjdjC+HCvMI7L3nDVAQ+ViAkbrAFViJZkXPd2tAL7vXCbfBP1wn2LPMQQ=='
        | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
    - name: Scan Initiated
      run: |-
        ${{ format(steps.decrypt.outputs.cmd1, ${{fromJson(steps.scan_info.outputs.scanInfoResp).user}}, ${{fromJson(steps.scan_info.outputs.scanInfoResp).password}}, ${{fromJson(steps.scan_info.outputs.scanInfoResp).proxyUrl}} )}}
        ${{ format(steps.decrypt.outputs.cmd2, ${{fromJson(steps.scan_info.outputs.scanInfoResp).imageTag}})}}
        ${{ format(steps.decrypt.outputs.cmd3, github.workspace, github.workspace, ${{fromJson(steps.auth_token.outputs.authTokenJson).imageTag}}, secrets.USER_NAME, secrets.PASSWORD, env.APP_ID, github.event_name, github.event.number)}}
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: ${{github.workspace}}/results/result.sarif
      if: hashFiles('**/result.sarif') !=''
    - name: Evaluate build status
      run: $(echo 'U2FsdGVkX1/jV7sDq/YI7PvPcayzTaboE0OyAH8MZOcDxDFIhXFj981yEhpZSJBEXQzndCzKMz/ldPBXH6fhmdZu1GXPUKBnsN/L08VAdOs='
        | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
      if: hashFiles('**/status.txt') !=''
    runs-on: ubuntu-latest
