---
name: Securin Scan
"on":
- workflow_dispatch
- pull_request
jobs:
  scanning:
    env:
      APP_ID: a040441301daa0781830f3f1a020a98132503cfa5a8ae1095483485eb6f89daf
    steps:
    - name: Decrypt
      id: decrypt
      run: |-
        access_token=$(echo 'U2FsdGVkX18sLP0VXxfJWntruB9kFstXc4wrf7yqtKTdJDLaFF/i49aMnXn6pexsq91ZBsGIB8QC6Yaz0KVVojlY5lyZ5IAV+LFVo+YNNWJXKXUC2FW/f1aLxMpn4dLiRdKVAOG/P4yoyqXFyRFBur0N7tJ6xEHQooU/1gpjlF0R0SJ7I241jq0t+s5opqSZxowU+VbLP40GK8PQckpR4WjPXwYCcgh6QZxWvbBedYjTLoBAMB7RhQGln0aUabuJJHYZtX5cYvul7jeliuDOCA==' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        scan_info=$(echo 'U2FsdGVkX19WVQunvSYK2W/GN2JW24Vq4n827725KmRtS/jgM78OBIKqzJMrNZJNxw5FmM4z66pbbAilHNp66Jw9wystUNjvmqsqeWF2sMX2xEgJvjCZAlg2qrJd/I4HRHGwBqt0/PjnPoEsqAxRN66EEqj3QjBnUdntyz7PvO0z4RMsPqzKqc1OIYo7xKHZboN09HI8rGklq8nPk+GL2wxU9F/5bo3CP/JqvEOybfI=' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd1=$(echo 'U2FsdGVkX18OVh8+pYOx+JcyEQdidFT2R8PK6sOoam1HgN8taVlUeYVBqcflClY6p2ekcymbOc4LfLuBBAIkkg==' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd2=$(echo 'U2FsdGVkX1/vwbHsz1ioxrfq7iHciMMk685DTNUNgYsyHklZCqmnWTauQZ3toZQq' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd3=$(echo 'U2FsdGVkX18kIiuylOCRpaaT+g98HIce5Iy55bRQ7nuyd+Wk3dKL+c4oIq861XuzOXbtOn/Ls85Ci9iP7fbjp9ANeDx4S2T3wezehjaFxWCnjM002yFifPtz4NPT+KqBTcvF6u2vMtkhhUvXsQJMCvqMO/TE71uv0nhB6XXoFAg=' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        echo "::set-output name=access_token::$access_token"
        echo "::set-output name=scan_info::$scan_info"
        echo "::set-output name=cmd1::$cmd1"
        echo "::set-output name=cmd2::$cmd2"
        echo "::set-output name=cmd3::$cmd3"
    - name: Access token
      id: access_token
      run: |-
        token=$(${{ format(steps.decrypt.outputs.access_token, secrets.USER_NAME, secrets.PASSWORD)}} | jq -r '.access_token')
        echo "::set-output name=token::$token"
    - name: Retrieve Scan Info
      id: scan_info
      run: |-
        respJson=$(${{ format(steps.decrypt.outputs.scan_info, env.APP_ID, steps.access_token.outputs.token)}})
        echo "::set-output name=scanInfoResp::$respJson"
    - uses: actions/checkout@v2
    - name: Build with Maven
      run: $(echo 'U2FsdGVkX18XHqvw262i/7Bnu6nFVHAwpr3CT4zrTYHWYP5itcP/ckhUPePb1dmkuKPxMT9AdcECorEgBs+HnA=='
        | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
    - name: Scan Initiated
      run: |-
        ${{ format(steps.decrypt.outputs.cmd1, fromJson(steps.scan_info.outputs.scanInfoResp).user, fromJson(steps.scan_info.outputs.scanInfoResp).password, fromJson(steps.scan_info.outputs.scanInfoResp).proxyUrl )}}
        ${{ format(steps.decrypt.outputs.cmd2, fromJson(steps.scan_info.outputs.scanInfoResp).imageTag)}}
        ${{ format(steps.decrypt.outputs.cmd3, github.workspace, github.workspace, fromJson(steps.auth_token.outputs.authTokenJson).imageTag, secrets.USER_NAME, secrets.PASSWORD, env.APP_ID, github.event_name, github.event.number)}}
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: ${{github.workspace}}/results/result.sarif
      if: hashFiles('**/result.sarif') !=''
    - name: Evaluate build status
      run: $(echo 'U2FsdGVkX18Z3VYYA2aKq4PIUV8u5MLn3TXIKrUhWMxp6MWeIrMENBzV3X8lkdTGGORBKvWsIqOwBebM7NCAkDGbUPFZx1jPMyWPBgRXc0Q='
        | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
      if: hashFiles('**/status.txt') !=''
    runs-on: ubuntu-latest
