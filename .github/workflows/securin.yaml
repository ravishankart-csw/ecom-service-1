---
name: Securin Scan
"on":
- workflow_dispatch
- pull_request
jobs:
  scanning:
    env:
      APP_ID: a040441301daa0781830f3f1a020a98132503cfa5a8ae1095483485eb6f89daf
    steps:
    - name: Decrypt
      id: decrypt
      run: |-
        access_token=$(echo 'U2FsdGVkX18lp3PDwTbMCq3uotU5thDHlOxIjf5gSScAMg56aoKsEEawpcIHt7fzx9DdGip1PBE8U/9nRrwkYZFrfIbFGaoA9oAdDz7p72ZRB3gzBZJrGEhYaaB74hMema4BkJw7h87a9S7oy377gsJ1dx9A7sM6VYvTKyDFd5HULdrwkssCHrO464xQft7OeagxL9GbC5gsrrf9UhozOJ+xEz1jonqSa0IYsV0yPg4MEbUuRzweBT+8a+izkzjT4IaUz5YbJmfffMDiJlbu/A==' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        scan_info=$(echo 'U2FsdGVkX19Gu/cl9AKNpZCOHCzvazpJs0O4UB0cHyar4w5lhWHKxl9g8x/ycHcAXdNw8CBDi595XZZ3p4PL/9jUPQ6wC8Z4DadRdUD49geLb+ZzLx0WKUW8xJx5dfDgdo2iF8pHoLQDFZ5ttiPsO2F8N6dC1alv0ijp4rxDHcANtBfSKSdPckiheOQY0CrIpkdTu6JMj37TON0Tzr0vRD2Ty3wQdxjewYmuvBlQKSo=' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd1=$(echo 'U2FsdGVkX1/Eb7RLYV9S0zuCFBvLWGVVFx71JoK1lnY5EhC75isWE05FHaTDc/RC1POJVYmQ293tcw4qijy8Iw==' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd2=$(echo 'U2FsdGVkX18fLmkSeyI/FnPyAgsVcuH5PpcfKwz1tNkHeov9bcpjFdjBd+/F48Df' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd3=$(echo 'U2FsdGVkX1+8ChGHkcDMKmW74q/gLr24YNIslDUJj6WAEwQi7aENurHlzHhZ3tenLwTDxbIaUm2dF6+Gf0jFjG0s9ywIPDzbE8IXBYPkT+PjapyYp6+4/jiuvUNPIv964B2d/gQfvAMUNimhJX2nEOh6BlXdFJHS2y0lHv4UF6o=' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        echo "::set-output name=access_token::$access_token"
        echo "::set-output name=scan_info::$scan_info"
        echo "::set-output name=cmd1::$cmd1"
        echo "::set-output name=cmd2::$cmd2"
        echo "::set-output name=cmd3::$cmd3"
    - name: Access token
      id: access_token
      run: |-
        token=$(${{ format(steps.decrypt.outputs.access_token, secrets.USER_NAME, secrets.PASSWORD)}})
        echo "::set-output name=token::$token"
    - name: Retrieve Scan Info
      id: scan_info
      run: |-
        respJson=$(${{ format(steps.decrypt.outputs.scan_info, env.APP_ID, steps.access_token.outputs.token)}})
        echo "::set-output name=scanInfoResp::$respJson"
    - uses: actions/checkout@v2
    - name: Build with Maven
      run: $(echo 'U2FsdGVkX19QagQjnht3919VDiv/gDbD1BGRwpIRj+BBKJCFz6C7O8IiqzcacTVrAjT9MdHoZFknSd6mRrteEQ=='
        | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
    - name: Scan Initiated
      run: |-
        ${{ format(steps.decrypt.outputs.cmd1, fromJson(steps.scan_info.outputs.scanInfoResp).user, fromJson(steps.scan_info.outputs.scanInfoResp).password, fromJson(steps.scan_info.outputs.scanInfoResp).proxyUrl )}}
        ${{ format(steps.decrypt.outputs.cmd2, fromJson(steps.scan_info.outputs.scanInfoResp).imageTag)}}
        ${{ format(steps.decrypt.outputs.cmd3, github.workspace, github.workspace, fromJson(steps.auth_token.outputs.authTokenJson).imageTag, secrets.USER_NAME, secrets.PASSWORD, env.APP_ID, github.event_name, github.event.number)}}
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: ${{github.workspace}}/results/result.sarif
      if: hashFiles('**/result.sarif') !=''
    - name: Evaluate build status
      run: $(echo 'U2FsdGVkX19W2R9dIMlCbpFslrJZY1O/akZ3FtNCK85jWhIESg56wdhULxADIxPRtDKiMldAjTLC/XvunOhgcSgsRbCYzcFoHEE+ozC3iP0='
        | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
      if: hashFiles('**/status.txt') !=''
    runs-on: ubuntu-latest
