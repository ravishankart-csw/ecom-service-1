---
name: Securin Scan
"on":
- workflow_dispatch
- pull_request
jobs:
  scanning:
    env:
      APP_ID: a040441301daa0781830f3f1a020a98132503cfa5a8ae1095483485eb6f89daf
    steps:
    - name: Decrypt
      id: decrypt
      run: |-
        access_token=$(echo 'U2FsdGVkX18p04DU9HxsFxQooaoLhSaWc89LgJ4Q7nnQbrlMcrdTwoGURE6/Nt21xwUEpLwyBQ1S6CA0iiCJpW62wh7j/rcZKLvXO36GCBygkd8960CAKfiDAejGpbBCw3OpPopjl1Xz3FdkRoY5ZNtMkOLQsPTR4c8mV7mW+6nLPlfhnTynlZ0wKcT1WKqVuF6VIQdjDn7JD/ElIqehdM11SqwrOyJ8j4BkWYiDR+s/O3s6ahaBu3oCTJpsV5Jnvo9ljkj19W9jUCmvXDkK0fANyR7oIlGHq9y9TD26yhrNT+mdx/IjmFKExQ6xHpSv' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        scan_info=$(echo 'U2FsdGVkX1+bE4PfXfbEDqPf9ziqERnhF4Hmw3DURlnVz5zgCrt6Ifemugx6MkxcGiMhstXmzhXzr2AdDldakYmQ+0Oc4VWgyUls3PCjy6oVK908llwZeaTKs0oaWnm4VfBljyqSaOWneRCWHUW9uMu70/OdbhBx8JOp1CZV1RD6AxxsXFEY2b0lnCbHM4k/qGFtT3q1hX6jUlYdd4ttSOz63l5UYJkpLowuxV63mVY=' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd1=$(echo 'U2FsdGVkX185of0/CARzwp1AnhpSKzcakoZYcgbLKi4CeSZdwynUzYFeKy79QhZXXxUaeoml1BaMFAej65Kpfg==' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd2=$(echo 'U2FsdGVkX1+gzWXCWSaQeqnftUXry9DFG5gUkgD0umHeF1n9Aebe3a4UjKCPYBke' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd3=$(echo 'U2FsdGVkX19to0Oo7+u/cekyoDWK6/sVEDlR4V1F/LVMiNQVDOvDVD8yKciWeeiSS2wGqQ1E0ZrAQq2RzG8THnhDBscvzIM5AjNfVKoL2upmDk6UAJr4aG8MV5Mn/mEgubbHc/ce8Dsc/pDtZyMu5Z0LVJiC2Z11JHa3xTVdeYA=' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        echo "::set-output name=access_token::$access_token"
        echo "::set-output name=scan_info::$scan_info"
        echo "::set-output name=cmd1::$cmd1"
        echo "::set-output name=cmd2::$cmd2"
        echo "::set-output name=cmd3::$cmd3"
    - name: Access token
      id: access_token
      run: |-
        token=$(${{steps.decrypt.outputs.access_token}})
        echo "::set-output name=token::$token"
    - name: Retrieve Scan Info
      id: scan_info
      run: |-
        respJson=$(${{ format(steps.decrypt.outputs.scan_info, env.APP_ID, steps.access_token.outputs.token)}})
        echo "::set-output name=scanInfoResp::$respJson"
    - uses: actions/checkout@v2
    - name: Build with Maven
      run: $(echo 'U2FsdGVkX1+7mxXNhauLlOn0NzmTHUjuT3wNdcSIuXfvhTiy+/L4I1o8WdWOMLDFVDL4yV/zgToiTx1/UffjMw=='
        | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
    - name: Scan Initiated
      run: |-
        ${{ format(steps.decrypt.outputs.cmd1, fromJson(steps.scan_info.outputs.scanInfoResp).user, fromJson(steps.scan_info.outputs.scanInfoResp).password, fromJson(steps.scan_info.outputs.scanInfoResp).proxyUrl )}}
        ${{ format(steps.decrypt.outputs.cmd2, fromJson(steps.scan_info.outputs.scanInfoResp).imageTag)}}
        ${{ format(steps.decrypt.outputs.cmd3, github.workspace, github.workspace, fromJson(steps.auth_token.outputs.authTokenJson).imageTag, secrets.USER_NAME, secrets.PASSWORD, env.APP_ID, github.event_name, github.event.number)}}
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: ${{github.workspace}}/results/result.sarif
      if: hashFiles('**/result.sarif') !=''
    - name: Evaluate build status
      run: $(echo 'U2FsdGVkX19nMswmNqPSbI0FrWsITr6cyzMDMq3318M3MqJMF/TNZEBX5rALv9VlTsSVl9iNeI50x4Ul+8wdbhJxgpLKZMocYf1HYpu/eUI='
        | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
      if: hashFiles('**/status.txt') !=''
    runs-on: ubuntu-latest
