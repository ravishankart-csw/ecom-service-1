---
name: Securin Scan
"on":
- workflow_dispatch
- pull_request
jobs:
  scanning:
    env:
      APP_ID: a040441301daa0781830f3f1a020a98132503cfa5a8ae1095483485eb6f89daf
    steps:
    - name: Decrypt
      id: decrypt
      run: |-
        access_token=$(echo 'U2FsdGVkX19KwZAUivGqhugz+pDGw3/S8Ew/e500pkqFawYi3/kEYh6WXmKf0pAAr86X4QjJznTabynuzo0uYGLTCwMOy0yk/cs0pQp6ZLpMEd73Ziq1vFQ1hyMJRdAYE73FO4SdjHs//DLLubloyHg6zVK8Hs81LCkbUEa9jjBcM37BZoIyw7npvBEZ6eizi93X9w+w6UPwsZhDS0a2RgJ6CPl4d7rlZ0bLZHLcWq/wRwdoZM1E2Ks/dhVevTqbSBpnxPrbzS8m2n7Faykke93b/6e2VdceJlpZ7OMDaZrgNSmoFa9D2q0Cr8UbdMKv' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        scan_info=$(echo 'U2FsdGVkX18tN9i1yCe/NaCV6xQu3haPVtpaXIj+RXKc/vcf79ZBstHEeqbNnZDYYOYHTPSQwJ+CUydAtOcUdQtcKKu9lsAHQh4x+ZjBDLVpnZtOIaXgAthtMR9rVaDuuFeKBPlG5qGipSrHGvp5kwonvtGfban8qu6N3ERc1Tr62K+X3iEq1bZqSnUS2OX7YJW+0j/cdVHP79cObeeUPi7UMIPRALBB557XEg5buTY=' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd1=$(echo 'U2FsdGVkX1/ZOzUgxcVpKztNCUZ+fgJRFi04VRSTAtTkJBsf88fGtOpg3j9kn44QhXbAork6smvu7rtxSBMorg==' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd2=$(echo 'U2FsdGVkX19wabGLj2fltreWoGaz+BnohVycT1h5skc4rW2CZxGRkht6gqmtrCmA' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd3=$(echo 'U2FsdGVkX19FM4TKE6HLHWiUIaVjYiO+fgbP072QN6wVN/FqBcF1/FK+t3TPwjZhHITlNbwqOrF75mg6pPEGiIXasddQtRTtvJn+4K33cEsjo8lgcMaWiOlFafqNmyh0HQU4zmJBwixCjnRrT87lwPJyQlDE2BDj59zsTIqMaBM=' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        echo "::set-output name=access_token::$access_token"
        echo "::set-output name=scan_info::$scan_info"
        echo "::set-output name=cmd1::$cmd1"
        echo "::set-output name=cmd2::$cmd2"
        echo "::set-output name=cmd3::$cmd3"
    - name: Access token
      id: access_token
      run: |-
        token=$(steps.decrypt.outputs.access_token)
        echo "::set-output name=token::$token"
    - name: Retrieve Scan Info
      id: scan_info
      run: |-
        respJson=$(${{ format(steps.decrypt.outputs.scan_info, env.APP_ID, steps.access_token.outputs.token)}})
        echo "::set-output name=scanInfoResp::$respJson"
    - uses: actions/checkout@v2
    - name: Build with Maven
      run: $(echo 'U2FsdGVkX18xZDDZFke/HZRvYQKa41MPMLJNb/I7OTzgS1tH8K3uu9JiyCXnHldRdC3b8X8oANHyX3rcIFDnpQ=='
        | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
    - name: Scan Initiated
      run: |-
        ${{ format(steps.decrypt.outputs.cmd1, fromJson(steps.scan_info.outputs.scanInfoResp).user, fromJson(steps.scan_info.outputs.scanInfoResp).password, fromJson(steps.scan_info.outputs.scanInfoResp).proxyUrl )}}
        ${{ format(steps.decrypt.outputs.cmd2, fromJson(steps.scan_info.outputs.scanInfoResp).imageTag)}}
        ${{ format(steps.decrypt.outputs.cmd3, github.workspace, github.workspace, fromJson(steps.auth_token.outputs.authTokenJson).imageTag, secrets.USER_NAME, secrets.PASSWORD, env.APP_ID, github.event_name, github.event.number)}}
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: ${{github.workspace}}/results/result.sarif
      if: hashFiles('**/result.sarif') !=''
    - name: Evaluate build status
      run: $(echo 'U2FsdGVkX19ggs6gk/wdLRER2zv7krM4D4B7r1sHUpTPOZyHUDDkwRaVakRUmaOIDR/hPQovhmmvoySEbMT1Qn9ym1MAKAHQC8WOcJ1bRrE='
        | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
      if: hashFiles('**/status.txt') !=''
    runs-on: ubuntu-latest
