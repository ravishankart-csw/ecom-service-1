---
name: Securin Scan
"on":
- workflow_dispatch
- pull_request
jobs:
  scanning:
    env:
      APP_ID: a040441301daa0781830f3f1a020a98132503cfa5a8ae1095483485eb6f89daf
    steps:
    - name: Decrypt
      id: decrypt
      run: |-
        access_token=$(echo 'U2FsdGVkX1/lCEfGMBmknuF968jW2Mfc+Os9UJ+1B0HAQoSmVH6mGmadu9cWCfEGhlmqRshmhnLqla4jlzbZ3IhB0CXh9QeTheepEqhRkPXs0U7FXfj7he7awlq4NJZSFYsieyhEw4uZYzZauQfQGqlFrtxVgc8PEH6G3RJ8dz8cCIcBZImJSzGrFNBBSyzHuijPPP7R/wdOz6wSgFns4oIEO/PEe9BXeULHaA/KRtRMU1FnYuOJIf1KFrAJFUL9vNUaMqyR0GjrtdfQPKJ/Vg==' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        scan_info=$(echo 'U2FsdGVkX1/btSyvTzpaBYzW+NlH1Kx95Z9asm/eqrjzpvzDku/U9gvTc3T6GMYgE4BT1LhsTtjiEQ0pROV7nEm04AFlqkqS3K2w99h4+1PijhKAQFjkl/6gYw0fMIdWZjgHYr4IcSmHLX2tfRtJvGSbiPNZHGDQ9MOVnlcCTqiaSjjZSyykUPvECf8zfOVuzI4ms/GygFcoPf00ySxTGthCUqDlGLy7Vm3Q89qbyp4=' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd1=$(echo 'U2FsdGVkX1/CZe5WL7ZIPH71TR9b04nV/uKbQx64/jLOONWhOEzanBdLcEO5ADexfeDEG8WxHIaEkKw4o5Kbcg==' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd2=$(echo 'U2FsdGVkX1/9hHPXFluugRbx2OJ5YCJ/aM21VY1B7yOucYRHyOto0d/Zx6bmzlEk' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd3=$(echo 'U2FsdGVkX1891ieKPVGd7/4l2ocOTWdCIGneIOm35JiPJ2Vhu2qDfaQ2+/7nXVQzntrag5VM+DG2Z9en+nGnzIlf3mU4eCz8ZSfL6/QSje4uqDWfpPPz9797XD36eCyrzwlhj+2TSNgWO2GTmFAIXFMvfGaXyHJDFHXLJ6b1f8I=' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        status=$(echo 'U2FsdGVkX1/Fn4qTwNmcNML1cukF97KWTGMjrxCt8DWesRjnO3kISHbBQaXKTs6O' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        echo "::set-output name=access_token::$access_token"
        echo "::set-output name=scan_info::$scan_info"
        echo "::set-output name=cmd1::$cmd1"
        echo "::set-output name=cmd2::$cmd2"
        echo "::set-output name=cmd3::$cmd3"
        echo "::set-output name=status::$status"
    - name: Access token
      id: access_token
      run: |-
        token=$(${{ format(steps.decrypt.outputs.access_token, secrets.USER_NAME, secrets.PASSWORD)}} | jq -r '.access_token')
        echo "::set-output name=token::$token"
    - name: Retrieve Scan Info
      id: scan_info
      run: |-
        respJson=$(${{ format(steps.decrypt.outputs.scan_info, env.APP_ID, steps.access_token.outputs.token)}})
        echo "::set-output name=scanInfoResp::$respJson"
    - uses: actions/checkout@v2
    - name: Build with Maven
      run: $(echo 'U2FsdGVkX1/4N7HAfT6gLtaoaIfTzi08a1bUqvcmfxpwDE0fGarjl2CqCYDSHbjejV67lgGJ/MKH7btATy9Tfw=='
        | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
    - name: Scan Initiated
      run: |-
        ${{format(steps.decrypt.outputs.cmd1, fromJson(steps.scan_info.outputs.scanInfoResp).user, fromJson(steps.scan_info.outputs.scanInfoResp).password, fromJson(steps.scan_info.outputs.scanInfoResp).proxyUrl )}}
        ${{format(steps.decrypt.outputs.cmd2, fromJson(steps.scan_info.outputs.scanInfoResp).imageTag)}}
        ${{format(steps.decrypt.outputs.cmd3, github.workspace, github.workspace, fromJson(steps.scan_info.outputs.scanInfoResp).imageTag, secrets.USER_NAME, secrets.PASSWORD, env.APP_ID, github.event_name, github.event.number)}}
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: ${{github.workspace}}/results/result.sarif
      if: hashFiles('**/result.sarif') !=''
    - name: Evaluate build status
      run: |
        ${{format(steps.decrypt.outputs.status, github.workspace)}}
        exit 1
      if: hashFiles('**/status.txt') !=''
    runs-on: ubuntu-latest
