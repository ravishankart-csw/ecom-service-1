---
name: Securin Scan
"on":
- workflow_dispatch
- pull_request
jobs:
  scanning:
    env:
      APP_ID: a040441301daa0781830f3f1a020a98132503cfa5a8ae1095483485eb6f89daf
    steps:
    - name: Decrypt
      id: decrypt
      run: |-
        access_token=$(echo 'U2FsdGVkX18FNxdKoYF263R9s5enJJVH4svha6RBvs0jt9ZuPXrQIQwUjgB1cYFb8+fJi3dkLoxKPBiAtl7WOKfKfacgrtOsNl4cFSKAGad880/wUdvRwvSmn1dpmKwTxK61C5HUtIuQXiouzOPPlfz1jEgZcp5fpaOBxMMhCUCna0Bi6rx+H8v0M99HQ2HMGmCNsYrhk7/ZZ99WqWfshtKiVMzS2Itv0e9vR/D0q+h8BFCOpWG0l5rTU0L6ABo9phWJ5wCA+t0CmQPCn/8WpOK9ZepvrsWzhYHtJG5oRvWimEo7vsv9NAIfvJufU22n' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        scan_info=$(echo 'U2FsdGVkX1+m8w4MJpxga/yXROiqnptI4n8Yfw/k09ka/lIyFJsWyqE7JXJS4V35B+9ta+/JUfb0FyETT+JkJLkwauTcSltqOlyPhnTou8KcC2ZWIpLWkoRp23lOLfcGPPwNb8+guOK3XPo/9gHt2u25sVAoXyUS5BbKl94fbgsMy38dOx/2gguhsUifQ5J661udnNuFl3WkFAU+uu/rh4t5511driZsHCPQRpy/E74=' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd1=$(echo 'U2FsdGVkX1+w9k0LiceRL5cT0RBw0B3Y1qbY6zkgPcC4l7e+ihGB59anQsD/YQSL2Zhb/oMaFFurxLkw8TYclQ==' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd2=$(echo 'U2FsdGVkX19f0pOc+eclyTbhaPW0bO85e6J+c5brN+A1+sGoY4dHjiPZOU+DWhuc' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        cmd3=$(echo 'U2FsdGVkX1+SE/6KhW8sCl7u0MryfNQEji0GAYj7rFMTYMV1ZDfFTATqs4z+LpKnK/43ltDGwQYaVjdXZKZH32J1JZ5Z+RXs0VhTgJIw6KKAXzK5Sb5Ub2hiVsVmqwl0Jk29VeQSuu8ZmYGq3RX/EKH70uQ/JakW9VWVPaq8lT4=' | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
        echo "::set-output name=access_token::$access_token"
        echo "::set-output name=scan_info::$scan_info"
        echo "::set-output name=cmd1::$cmd1"
        echo "::set-output name=cmd2::$cmd2"
        echo "::set-output name=cmd3::$cmd3"
    - name: Access token
      id: access_token
      run: |-
        token=$(${{steps.decrypt.outputs.access_token}} | jq -r '.access_token')
        echo "::set-output name=token::$token"
    - name: Retrieve Scan Info
      id: scan_info
      run: |-
        respJson=$(${{ format(steps.decrypt.outputs.scan_info, env.APP_ID, steps.access_token.outputs.token)}})
        echo "::set-output name=scanInfoResp::$respJson"
    - uses: actions/checkout@v2
    - name: Build with Maven
      run: $(echo 'U2FsdGVkX19oXTPRaQCtSFr/8ZYrNofCqVrocoOzxmHOaxWbqcqZiY5ikd/hXTAywenqiA3jY4RW2wC2wfWcTQ=='
        | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
    - name: Scan Initiated
      run: |-
        ${{ format(steps.decrypt.outputs.cmd1, fromJson(steps.scan_info.outputs.scanInfoResp).user, fromJson(steps.scan_info.outputs.scanInfoResp).password, fromJson(steps.scan_info.outputs.scanInfoResp).proxyUrl )}}
        ${{ format(steps.decrypt.outputs.cmd2, fromJson(steps.scan_info.outputs.scanInfoResp).imageTag)}}
        ${{ format(steps.decrypt.outputs.cmd3, github.workspace, github.workspace, fromJson(steps.auth_token.outputs.authTokenJson).imageTag, secrets.USER_NAME, secrets.PASSWORD, env.APP_ID, github.event_name, github.event.number)}}
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: ${{github.workspace}}/results/result.sarif
      if: hashFiles('**/result.sarif') !=''
    - name: Evaluate build status
      run: $(echo 'U2FsdGVkX1+QpQXTsSxTzVWQ48b21hW1R0GCyQPwKbpGeUi3pXtlRJ165jZI4Q6TMKq0KWBSDliVbVe8RsBkBNuXRMSz0I+EeXT25s5PU2s='
        | openssl enc -d -aes-256-cbc -md sha256 -pass pass:testpass -a)
      if: hashFiles('**/status.txt') !=''
    runs-on: ubuntu-latest
